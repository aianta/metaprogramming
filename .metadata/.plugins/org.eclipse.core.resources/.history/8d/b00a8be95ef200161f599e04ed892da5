package assignment;

import becker.robots.*;


public class SteepleChaser extends Racer
{

	boolean movedUpHurdleLast = false;
	boolean movedEastLast = false;
	boolean movedSouthLast = false;
	int state = 0; //state = 0 means no hurdle, state = 1 means hurdle
	
	public SteepleChaser(City aCity, int str, int ave, Direction dir)
	{
		super(aCity, str, ave, dir);
	}
	
	
	
	public void jumpHurdle()
	{		
		moveUpHurdle();
		//moveDownHurdle();
	
	}
	
	public void runRace()
	{
		while(!this.canPickThing())
		{
			this.raceStride();
		}
		
		pickAllThings();
	}
	
	public void raceStride()
	{

		if (state == 1){
		  if (frontIsClear() != true)
	        {
			  
			  if (getDirection() == Direction.SOUTH){
				  state = 0;
				  turnLeft();
			  }else{
		            turnLeft();
		            movedUpHurdleLast = true;
			  }		  

	        }else{
	            if (frontIsClear() && movedUpHurdleLast){
	                turnRight();
	                movedUpHurdleLast = false;
	            }
	        }
		
	        if (movedEastLast){
	            turnRight();
	            movedEastLast = false;
	        }
	        
	        if (frontIsClear()){
	            this.move();
	            
	            if (this.getDirection() == Direction.EAST){
	                movedEastLast = true;
	            }
	        }
	       }
		
		if (state == 0){
	        if (frontIsClear()){
	            this.move();
	        }
		}
	}
	
	public void moveUpHurdle()
	{
	
				
	}
	
		
	public void moveDownHurdle()
	{
		move();
		turnRight();
		move();
		turnRight();
		if (frontIsClear())
		{
			move();
		}
		else
		{
			turnLeft();
		}
	}
		
}
	
	
	

