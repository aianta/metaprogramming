package metaprogramming.generator;

import metaprogramming.antlr.*;

import java.util.Stack;

import org.antlr.v4.runtime.CommonToken;
import org.antlr.v4.runtime.ParserRuleContext;
import org.antlr.v4.runtime.RuleContext;
import org.antlr.v4.runtime.tree.ErrorNode;
import org.antlr.v4.runtime.tree.TerminalNode;
import org.antlr.v4.runtime.tree.TerminalNodeImpl;

import metaprogramming.antlr.Java8BaseListener;
import metaprogramming.antlr.Java8Listener;
import metaprogramming.antlr.Java8Parser;
import metaprogramming.antlr.Java8Parser.*;

public class DataJavaListener extends Java8BaseListener {
	
	static Stack<Integer> activeStack = new Stack<Integer>();
	static int nodeId = 0;

	public void enterEveryRule(ParserRuleContext ctx){
		activeStack.push(nodeId);
		nodeId++;
	}
	
	public void exitEveryRule(ParserRuleContext ctx) {
		
		int exitingNodeId = activeStack.pop();
		
		System.out.println("this node: " +  exitingNodeId + "parent node: " + activeStack.peek());
		
		//System.out.println(ctx.getText());
		
	}

}
